{"version":3,"file":"static/js/home.8c048934.chunk.js","mappings":"yMAEaA,E,QAAaC,GAAAA,GAAH,yC,SCER,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,GAC7B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMP,GAA1C,SACGG,KAFIC,U,gICLJ,SAASI,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAmBC,MAAK,SAAAC,GAAO,OAAIJ,EAAeI,QACjD,KAGD,UAAC,KAAD,YACE,gDACA,SAAC,IAAD,CAAWhB,OAAQW,S,6KCZjBM,ECDD,gCDCMC,ECFF,mCDIEJ,EAAmB,WAC9B,OAAOK,GAAAA,CAAM,GAAD,OAAIF,EAAJ,sCAAqCC,IAAWH,MAC1D,SAAAC,GAAO,OAAIA,EAAQI,KAAKJ,YAIfK,EAAsB,SAAAC,GACjC,OAAOH,GAAAA,CAAM,GAAD,OACPF,EADO,gCACoBC,EADpB,iCACoDI,IAC9DP,MAAK,SAAAC,GAAO,OAAIA,EAAQI,KAAKJ,YAGpBO,EAAiB,SAAAlB,GAC5B,OAAOc,GAAAA,CAAM,GAAD,OAAIF,EAAJ,iBAAgBZ,EAAhB,oBAA8Ba,EAA9B,oBAAwDH,MAClE,SAAAC,GAAO,OAAIA,EAAQI,SAGVI,EAAwB,SAAAnB,GACnC,OAAOc,GAAAA,CAAM,GAAD,OACPF,EADO,iBACKZ,EADL,4BAC2Ba,EAD3B,oBAEVH,MAAK,SAAAC,GAAO,OAAIA,EAAQI,KAAKK,SAEpBC,EAAwB,SAAArB,GACnC,OAAOc,GAAAA,CAAM,GAAD,OACPF,EADO,iBACKZ,EADL,4BAC2Ba,EAD3B,oBAEVH,MAAK,SAAAC,GAAO,OAAIA,EAAQI,KAAKJ","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/Home.js","services/fetchAPI.js","configs/axiosConfigs.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ol`\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { StyledList } from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <StyledList>\n      {movies.map(({ original_title, id }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>\n        );\n      })}\n    </StyledList>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        original_title: PropTypes.string.isRequired,\n      })\n    ),\n    PropTypes.array,\n  ]).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport MovieList from 'components/MovieList';\nimport { fetchTrendMovies } from 'services/fetchAPI';\nimport { SectionWrap } from './page.styled';\n\nexport default function Home() {\n  const [trendMovies, setTrendMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendMovies().then(results => setTrendMovies(results));\n  }, []);\n\n  return (\n    <SectionWrap>\n      <h2>Today trend movies</h2>\n      <MovieList movies={trendMovies} />\n    </SectionWrap>\n  );\n}\n","import axios from 'axios';\nimport { axiosConfigs } from 'configs/axiosConfigs';\n\nconst { url, API_KEY } = axiosConfigs;\n\nexport const fetchTrendMovies = () => {\n  return axios(`${url}trending/movie/day?api_key=${API_KEY}`).then(\n    results => results.data.results\n  );\n};\n\nexport const fetchMoviesBySearch = query => {\n  return axios(\n    `${url}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  ).then(results => results.data.results);\n};\n\nexport const fetchMovieById = id => {\n  return axios(`${url}movie/${id}?api_key=${API_KEY}&language=en-US`).then(\n    results => results.data\n  );\n};\nexport const fetchMovieCreditsById = id => {\n  return axios(\n    `${url}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(results => results.data.cast);\n};\nexport const fetchMovieReviewsById = id => {\n  return axios(\n    `${url}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then(results => results.data.results);\n};\n","export const axiosConfigs = {\n  API_KEY: '0e5524da41e4e049b8581d81c783bc71',\n  url: 'https://api.themoviedb.org/3/',\n};\n"],"names":["StyledList","styled","MovieList","movies","location","useLocation","map","original_title","id","to","state","from","Home","useState","trendMovies","setTrendMovies","useEffect","fetchTrendMovies","then","results","url","API_KEY","axios","data","fetchMoviesBySearch","query","fetchMovieById","fetchMovieCreditsById","cast","fetchMovieReviewsById"],"sourceRoot":""}