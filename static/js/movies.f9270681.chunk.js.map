{"version":3,"file":"static/js/movies.f9270681.chunk.js","mappings":"yMAEaA,E,QAAaC,GAAAA,GAAH,yC,SCER,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,GAC7B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMP,GAA1C,SACGG,KAFIC,U,+HCNJ,SAASI,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAkBA,OACE,kBAAMH,SAbR,SAAsBI,GACpBA,EAAEC,iBACoB,KAAlBH,EAAOI,QAMXN,EAASE,GACTC,EAAU,KANRI,EAAAA,GAAAA,MAAY,8BAA+B,CACzCC,SAAUD,EAAAA,GAAAA,SAAAA,aASd,WACE,4BACE,kBACEE,KAAK,OACLC,KAAK,SACLC,MAAOT,EACPU,SAvBR,SAAsBR,GACpBD,EAAUC,EAAES,OAAOF,aAyBjB,mBAAQF,KAAK,SAAb,uB,kCCzBS,SAASK,IACtB,OAA4Cb,EAAAA,EAAAA,UAAS,IAArD,eAAOc,EAAP,KAAuBC,EAAvB,KACA,GAA4Bf,EAAAA,EAAAA,UAAS,QAArC,eAAOgB,EAAP,KAAeC,EAAf,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAEMC,GAAaC,EAAAA,EAAAA,MACbC,EAAWH,EAAaI,IAAI,SAqBlC,OAnBAC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,IAAoBH,GAAUI,MAAK,SAAAC,GACjCZ,EAAkBY,GAEK,IAAnBA,EAAQC,OACVX,EAAU,WAEVA,EAAU,iBAGb,CAACK,KAOF,UAAC,KAAD,YACE,SAACxB,EAAD,CAAYC,SANhB,SAAwB8B,GACtBT,EAAW,CAAEnB,OAAO,SAAD,OAAW4B,QAMhB,aAAXb,IAAyB,SAAC5B,EAAA,EAAD,CAAWC,OAAQyB,IACjC,YAAXE,IACC,SAAC,KAAD,yD,6KCrCAc,ECDD,gCDCMC,ECFF,mCDIEC,EAAmB,WAC9B,OAAOC,GAAAA,CAAM,GAAD,OAAIH,EAAJ,sCAAqCC,IAAWL,MAC1D,SAAAC,GAAO,OAAIA,EAAQO,KAAKP,YAIfF,EAAsB,SAAAI,GACjC,OAAOI,GAAAA,CAAM,GAAD,OACPH,EADO,gCACoBC,EADpB,iCACoDF,IAC9DH,MAAK,SAAAC,GAAO,OAAIA,EAAQO,KAAKP,YAGpBQ,EAAiB,SAAAzC,GAC5B,OAAOuC,GAAAA,CAAM,GAAD,OAAIH,EAAJ,iBAAgBpC,EAAhB,oBAA8BqC,EAA9B,oBAAwDL,MAClE,SAAAC,GAAO,OAAIA,EAAQO,SAGVE,EAAwB,SAAA1C,GACnC,OAAOuC,GAAAA,CAAM,GAAD,OACPH,EADO,iBACKpC,EADL,4BAC2BqC,EAD3B,oBAEVL,MAAK,SAAAC,GAAO,OAAIA,EAAQO,KAAKG,SAEpBC,EAAwB,SAAA5C,GACnC,OAAOuC,GAAAA,CAAM,GAAD,OACPH,EADO,iBACKpC,EADL,4BAC2BqC,EAD3B,oBAEVL,MAAK,SAAAC,GAAO,OAAIA,EAAQO,KAAKP","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/SearchForm/SearchForm.js","pages/Movies.js","services/fetchAPI.js","configs/axiosConfigs.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ol`\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { StyledList } from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <StyledList>\n      {movies.map(({ original_title, id }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>\n        );\n      })}\n    </StyledList>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        original_title: PropTypes.string.isRequired,\n      })\n    ),\n    PropTypes.array,\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport default function SearchForm({ onSubmit }) {\n  const [search, setSearch] = useState('');\n\n  function handleChange(e) {\n    setSearch(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (search.trim() === '') {\n      toast.error('Please enter search request', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      return;\n    }\n    onSubmit(search);\n    setSearch('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={search}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm';\nimport MovieList from 'components/MovieList';\nimport { fetchMoviesBySearch } from 'services/fetchAPI';\nimport { SectionWrap, Warning } from './page.styled';\n\nexport default function Movies() {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams] = useSearchParams();\n\n  const navigation = useNavigate();\n  const serchUrl = searchParams.get('query');\n\n  useEffect(() => {\n    if (!serchUrl) {\n      return;\n    }\n    fetchMoviesBySearch(serchUrl).then(results => {\n      setSearchedMovies(results);\n\n      if (results.length === 0) {\n        setStatus('noFound');\n      } else {\n        setStatus('resolved');\n      }\n    });\n  }, [serchUrl]);\n\n  function onHandleSubmit(query) {\n    navigation({ search: `query=${query}` });\n  }\n\n  return (\n    <SectionWrap>\n      <SearchForm onSubmit={onHandleSubmit} />\n      {status === 'resolved' && <MovieList movies={searchedMovies} />}\n      {status === 'noFound' && (\n        <Warning>Sorry, no movie found on your request</Warning>\n      )}\n    </SectionWrap>\n  );\n}\n","import axios from 'axios';\nimport { axiosConfigs } from 'configs/axiosConfigs';\n\nconst { url, API_KEY } = axiosConfigs;\n\nexport const fetchTrendMovies = () => {\n  return axios(`${url}trending/movie/day?api_key=${API_KEY}`).then(\n    results => results.data.results\n  );\n};\n\nexport const fetchMoviesBySearch = query => {\n  return axios(\n    `${url}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  ).then(results => results.data.results);\n};\n\nexport const fetchMovieById = id => {\n  return axios(`${url}movie/${id}?api_key=${API_KEY}&language=en-US`).then(\n    results => results.data\n  );\n};\nexport const fetchMovieCreditsById = id => {\n  return axios(\n    `${url}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(results => results.data.cast);\n};\nexport const fetchMovieReviewsById = id => {\n  return axios(\n    `${url}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then(results => results.data.results);\n};\n","export const axiosConfigs = {\n  API_KEY: '0e5524da41e4e049b8581d81c783bc71',\n  url: 'https://api.themoviedb.org/3/',\n};\n"],"names":["StyledList","styled","MovieList","movies","location","useLocation","map","original_title","id","to","state","from","SearchForm","onSubmit","useState","search","setSearch","e","preventDefault","trim","toast","position","type","name","value","onChange","target","Movies","searchedMovies","setSearchedMovies","status","setStatus","useSearchParams","searchParams","navigation","useNavigate","serchUrl","get","useEffect","fetchMoviesBySearch","then","results","length","query","url","API_KEY","fetchTrendMovies","axios","data","fetchMovieById","fetchMovieCreditsById","cast","fetchMovieReviewsById"],"sourceRoot":""}